--warn("Roblox Is Back !!")
--warn("7:31 (10/31/2021) --Time")
print("ALALALA")
wait(1)
--local OW = 
local DEB = game:GetService("Debris")
local TWEEN = game:GetService("TweenService")
local RUN = game:GetService("RunService")
local CHAT = game:GetService("Chat")
local PLAY = game:GetService("Players")
local SERVI = TweenInfo.new(1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0,false,0)
local LPLR
local c = true

if c == true then
	LPLR = owner
else
	LPLR = game:GetService("Players").LocalPlayer
end
local CH = LPLR.Character
local hu = CH:FindFirstChildOfClass("Humanoid")
local Models = {}
local Tools = {}
local FILL = {}
wait(.5) 
local function nilz(c)
	for i,v in pairs(c:GetChildren()) do
		for i = 0,1,1 do
			wait()
			if FILL[i] == v then
			else
				table.pack(v)
				table.create(i,v)
				table.insert(FILL,i,v)
			end
			--print(FILL[i])
		end
	end
	
	local Mod = Instance.new("Model",script)
	local Humanoid = Instance.new("Folder",Mod)
	CurrentModel = Mod
	Mod.Name = c.Name
	
	for i = 0,#FILL do

		local OB = FILL[i]
		wait()
		local B = OB:Clone()
			
		if OB:IsA("Part") or OB:IsA("MeshPart") then
			if B.Name == "Torso" or "HumanoidRootPart" then
				for p,z in pairs(B:GetChildren()) do
					if z:IsA("Motor6D") or z:IsA("Sound") then
						--print(p,z)
						if z:IsA("Sound") then
						else
							
							z.Enabled = false
						end
					end
				end
			end
			if OB.Name == "NLS" then
			else
				local POS = OB.Position
				local SIZE
				local sm = Instance.new("SpecialMesh",B)
				sm.MeshType = "Brick"
				B.Name = OB.Name
				B.Parent = Mod
				B.Material = "SmoothPlastic"
				B.Transparency = 0
				B.Orientation = OB.Orientation
				B.Anchored = true
				B.CanCollide = false
				B.Size = OB.Size
				B.Position = POS
				B.Color = OB.Color
			end
			
		elseif OB:IsA("Tool") then
			for p,z in pairs(OB:GetChildren()) do
				if z:IsA("Part") then
					local mp = Instance.new("Part",Mod)
					table.insert(Tools,i,mp)
					for o,n in pairs(z:GetChildren()) do
						if n:IsA("Weld") or n:IsA("ImageLabel") then
						else
							local z0 = n:Clone()
							z0.Parent = mp
						end
					end
					mp.Anchored = true
					mp.Size = z.Size
					mp.CanCollide = false
					mp.Color = z.Color
					mp.Orientation = z.Orientation
					mp.Position = z.Position
				end
			end
		elseif OB:IsA("Accessory") then
			B.Parent = Mod
		elseif OB:IsA("CharacterMesh") then
			B.Parent = Mod
			print(B)
		
		end
	end 
end

LPLR.CharacterAdded:Connect(function(Char)
	print(Char)
end)
local vec2 = Vector2.new

--alvaro3524
--filipaogamer345
--Lucas_YT111
--BloxyKing0
-- (Donkey Music. (390270143))
-- (Neat music (1))
local list = {"BloxyKing0"}
local part = nil
local mod = nil
for i,v in pairs(workspace:GetChildren()) do
	if v:IsA("Model") then
		for m,p in pairs(list) do
			if v.Name == p then
				wait(.2)
				nilz(v)
				mod = v
				wait(1)
			end
		end
	end
end
wait(.6)
local CHAT = game:GetService("Chat")
game.Chat.BubbleChatEnabled = true
local FCH = CurrentModel:Clone()
wait(.2)
--6540094442
--6567528015
--7720296336
--6864770985
--6018223432
--1835478216
--4669076145
--6455491274
FCH.Parent = workspace
FCH.Name = LPLR.Name.."_"
for i,v in pairs(CurrentModel:GetChildren()) do
	if v:IsA(v) then
		for z,n in pairs(FCH:GetChildren()) do
			if n.Name == v then
			else
				if v:IsA("Sound") or v:IsA("Folder") then
				elseif v:IsA("Part") then				
				else
					local v0
					if v:IsA("Sound") or v:IsA("Vector3Value") or v:IsA("Part") then
					else
						if v.Name == "Hair" or v:IsA("Part") or v:IsA("MeshPart") then
						else
							--print(v.Name)
							if v:IsA("Part") or v:IsA("MeshPart") then
								v = v:Clone()
								v.Parent = FCH
							end
						end
					end
				end
			end
		end
	end
end


wait()
CurrentModel:Remove()

local TSlots = Instance.new("Folder",FCH)
wait(.2)
local HD = FCH["Head"]
local TS = FCH["Torso"] TS.BrickColor = BrickColor.Random()
local LA = FCH["Left Arm"]
local RA = FCH["Right Arm"]
local RG = FCH["Right Leg"] RG.BrickColor = TS.BrickColor
local LG = FCH["Left Leg"] LG.BrickColor = TS.BrickColor
local ROT = FCH["HumanoidRootPart"]
TSlots.Name = "ToolSlots"
local Sh = Instance.new("Shirt",FCH)
Sh.ShirtTemplate = "http://www.roblox.com/asset/?id=6484396037"
TS.BrickColor = BrickColor.Random()
for i,v in pairs(Tools) do
	if v then
		local Bool = Instance.new("BoolValue",TSlots)
		Bool.Name = i
	end
end
for i,v in pairs(TSlots:GetChildren()) do
	if v then
		print(v)
	end
end
local function MESSAGE(text)
	CHAT:Chat(HD,text,"Red")
end
wait(.2)

for i,v in pairs(FCH:GetChildren()) do
	if v:IsA("Part") then
		if v.Name == "Head" then
			if CH.Head:FindFirstChildOfClass("SpecialMesh") then
				zp = CH.Head:FindFirstChildOfClass("SpecialMesh"):Clone()
				zp.Parent = v
			end
		elseif v.Name == "Torso" then
			local sp = Instance.new("SpecialMesh",v)
			sp.MeshId = "rbxassetid://4461455651"
			sp.Scale = Vector3.new(2,2,1)

		else
			
		
			local sp = Instance.new("SpecialMesh",v)
			sp.MeshId = "rbxassetid://4461455651"
			sp.Scale = Vector3.new(1,2,1)
		end
		v.Material = "Plastic"
	end
end
for i,v in pairs(FCH:GetChildren()) do
	if v:IsA("Accessory") then
		print(v)
		local z = v["Handle"]
		for z,p in pairs(z:GetChildren()) do
			if p:IsA("Weld") then
				p:Remove()
			end
		end
		local w = Instance.new("Weld")
		w.Part0 = FCH.Head
		local l = mod.Head
		local Fix = CFrame.new(l.Position)
		local m0=z.CFrame:Inverse()*Fix
		local m1=l.CFrame:Inverse()*Fix
		z.Anchored = false z.CanCollide = false z.Massless = true
		w.Part1 = z w.Parent = FCH.Head
		w.C0 = m1
		w.C1 = m0
	end
end
local function PLAY(tab,SERVIz,part)
	TWEEN:Create(part,SERVIz,tab):Play()
end

local Attacking = false
--rbxassetid://6011135205

wait(.2)
MESSAGE("Made By BloxyKing0")
wait(.6)
local Text = {
	"Face Off"
}
MESSAGE("Face Off")

local RootHipWeld = Instance.new("Weld")
RootHipWeld.Parent = FCH.HumanoidRootPart
RootHipWeld.Part0 = FCH.HumanoidRootPart
RootHipWeld.Part1 = FCH.Torso
RootHipWeld.C0 = FCH.HumanoidRootPart.RootJoint.C0
RootHipWeld.C1 = FCH.HumanoidRootPart.RootJoint.C1

local RightArmWeld = Instance.new("Weld")
RightArmWeld.Parent = FCH.Torso
RightArmWeld.Part0 = FCH.Torso
RightArmWeld.Part1 = FCH["Right Arm"]
RightArmWeld.C0 = FCH.Torso["Right Shoulder"].C0
RightArmWeld.C1 = FCH.Torso["Right Shoulder"].C1

local LeftArmWeld = Instance.new("Weld")
LeftArmWeld.Parent = FCH.Torso
LeftArmWeld.Part0 = FCH.Torso
LeftArmWeld.Part1 = FCH["Left Arm"]
LeftArmWeld.C0 = FCH.Torso["Left Shoulder"].C0
LeftArmWeld.C1 = FCH.Torso["Left Shoulder"].C1

local RightLegWeld = Instance.new("Weld")
RightLegWeld.Parent = TS
RightLegWeld.Part0 = TS
RightLegWeld.Part1 = FCH["Right Leg"]
RightLegWeld.C0 = FCH.Torso["Right Hip"].C0
RightLegWeld.C1 = FCH.Torso["Right Hip"].C1

local LeftLegWeld = Instance.new("Weld")
LeftLegWeld.Parent = TS
LeftLegWeld.Part0 = TS
LeftLegWeld.Part1 = FCH["Left Leg"]
LeftLegWeld.C0 = FCH.Torso["Left Hip"].C0
LeftLegWeld.C1 = FCH.Torso["Left Hip"].C1

local Neck = Instance.new("Weld")
Neck.Parent = FCH.Torso
Neck.Part0 = FCH.Torso
Neck.Part1 = FCH.Head
Neck.C0 = FCH.Torso.Neck.C0
Neck.C1 = FCH.Torso.Neck.C1

HD.Anchored = false
LA.Anchored = false
RA.Anchored = false
RG.Anchored = false
LG.Anchored = false
TS.Anchored = false
ROT.Anchored = true
ROT.Transparency = 1
local core = Instance.new("Part",FCH)
core.Anchored = true
core.Size = Vector3.new(1,1,1)
core.CanCollide = false
core.CFrame = CFrame.new(0,3,0)
local look = Instance.new("Part",FCH)
look.Anchored = true
look.Size = Vector3.new(1,1,1)
look.CanCollide = false
look.CFrame = CFrame.new(0,3,0)
local TB = {
	["Torso"] = CFrame.new(0,0,0);
	["Left Leg"] = CFrame.new(0,0,0);
	["Right Leg"] = CFrame.new(0,0,0);
	["Left Arm"] = CFrame.new(0,0,0);
}
local LG = LeftLegWeld
local RG = RightLegWeld
local lok = false

local function FLY(p)
	if FLY == true then
		local Tween = TWEEN
		local Service = SERVI

		lok = true

		local GoTo = {
			CFrame = CFrame.new(math.random(-50,50),3,math.random(-50,50))
		}
		PLAY(GoTo,Service,look)
		for i = 0,SERVI.Time * 1.9,SERVI.Time/100*SERVI.Time * 2 do
			wait()
			part = p
			local s = {
				CFrame = p.CFrame * core.CFrame:Lerp(p.CFrame * CFrame.new(0,0,5),i)
			}
			PLAY(s,SERVI,core)
		end

		lok = false
	end
	
	
end
local Pos = Instance.new("CFrameValue")

Pos.Value = CFrame.new(0,3,0)
local Move = Instance.new("RemoteEvent",FCH)

FCH.Parent = workspace
function lerp(t, f)
	pcall(function()
		for i = 0,1,f do
			if t["Torso"] ~= nil then
				RootHipWeld.C0 = RootHipWeld.C0:Lerp(CH.HumanoidRootPart.RootJoint.C0 * t["Torso"],i)
			end
			if t["Right Arm"] ~= nil then
				RightArmWeld.C0 = RightArmWeld.C0:Lerp(CH.Torso["Right Shoulder"].C0 * t["Right Arm"], i)
			end
			if t["Right Leg"] ~= nil then
				RightLegWeld.C0 = RightLegWeld.C0:Lerp(CH.Torso["Right Hip"].C0 * t["Right Leg"], i)
			end
			if t["Left Arm"] ~= nil then
				LeftArmWeld.C0 = LeftArmWeld.C0:Lerp(CH.Torso["Left Shoulder"].C0 * t["Left Arm"], i)
			end
			if t["Left Leg"] ~= nil then
				LeftLegWeld.C0 = LeftLegWeld.C0:Lerp(CH.Torso["Left Hip"].C0 * t["Left Leg"], i)
			end
			if t["Head"] ~= nil then
				Neck.C0 = Neck.C0:Lerp(CH.Torso.Neck.C0 * t["Head"], i)
			end
			task.wait()
		end
	end)
end

coroutine.resume(coroutine.create(function()
	while true do
		
		TS.Position = ROT.Position
		
		--TS.Orientation = ROT.Orientation
		ROT.Position = core.Position
		
		wait()
		task.wait()
	end
end))
core.CFrame = CFrame.new(mod.Head.CFrame.X,3.025,mod.Head.CFrame.Z)
for i,v in pairs(FCH:GetChildren()) do
	if v:IsA("ShirtGraphic") then
		local dec = Instance.new("Decal",TS)
		dec.Texture = v.Graphic
		dec.Texture = math.random(1,9)..""..math.random(1,9)..""..math.random(1,9)..""..math.random(1,9)..""..math.random(1,9)..""
		v:Remove()
	end
end
--print(Ani)
local Forward_ = Instance.new("RemoteEvent",FCH)
local Back_ = Instance.new("RemoteEvent",FCH)
local Left_ = Instance.new("RemoteEvent",FCH)
local Right_ = Instance.new("RemoteEvent",FCH)
Forward_.Name = "Forward"
Back_.Name = "Back"
Left_.Name = "Left"
Right_.Name = "Right"
local Animation = Instance.new("RemoteEvent",FCH)
Animation.Name = "LL_"
Animation.OnServerEvent:Connect(function(player,Ani)
	if Ani == "Idle" and Attacking == false then
		TB = {
			["Torso"] = CFrame.new(0,0,-.2)*CFrame.new(0,0,math.sin(5*tick())/29); --x,z,y
			["Left Leg"] = CFrame.new(0,0,0)*CFrame.new(0,-math.sin(5*tick())/29,0);
			["Right Leg"] = CFrame.new(0,0,0)*CFrame.new(0,-math.sin(5*tick())/29,0);
			["Left Arm"] = CFrame.new(0,0,0)*CFrame.new(0,-math.sin(6*tick())/29,0);
			["Right Arm"] = CFrame.new(0,0,0)*CFrame.new(0,-math.sin(6*tick())/29,0);
		}
		lerp(TB,0.05)
	elseif Ani == "Walk" and Attacking == false then
		TB = {
			["Head"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(math.cos(10*tick())));
			["Torso"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(math.cos(10*tick()))); --x,z,y
			["Left Leg"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*-math.cos(10.7*tick())));
			["Right Leg"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*-math.cos(10.7*tick())));
			["Left Arm"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*math.cos(10.7*tick())));
			["Right Arm"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*math.cos(10.7*tick())));

		}

		lerp(TB,0.05)
	end
end)
Left_.OnServerEvent:Connect(function(player,MLz)
	ML = MLz
end)
Right_.OnServerEvent:Connect(function(player,MRz)
	MR = MRz
end)
Back_.OnServerEvent:Connect(function(player,MBz)
	MB = MBz
end)
Forward_.OnServerEvent:Connect(function(player,MFz)
	MF = MFz
end)
coroutine.resume(coroutine.create(function()
	RUN.Heartbeat:Connect(function()
		if MF == "Forward" then
			core.CFrame = core.CFrame * CFrame.new(0,0,-1)
		elseif MB == "Back" then
			core.CFrame = core.CFrame * CFrame.new(0,0,1)	
		elseif ML == "Left" then
			core.CFrame = core.CFrame * CFrame.new(-1,0,0)
		elseif MR == "Right" then
			core.CFrame = core.CFrame * CFrame.new(1,0,0)
		end
	end)
end))

coroutine.resume(coroutine.create(function()
	
	NLS([==[
local ow = owner
local CH = workspace[ow.Name.."_"]

local FCH = CH
wait(.1)
local MF = ""
local MB = ""
local ML = ""
local MR = ""
local Ani = "Idle"
wait(.1)

local aa = FCH:WaitForChild("LL_")
local lf = FCH:WaitForChild("Left")
local rf = FCH:WaitForChild("Right")
local bk = FCH:WaitForChild("Back")
local fo = FCH:WaitForChild("Foward")

local US = game:GetService("UserInputService")
US.InputBegan:Connect(function(input,gameProcessedEvent,typing)
	if not typing then
		if input.KeyCode == Enum.KeyCode.W then
			print("Pressing W")
			MF = "Foward"
			fo:FireServer(MF)
		elseif input.KeyCode == Enum.KeyCode.S then
			print("Pressing S")
			MB = "Back"
			bk:FireServer(MB)	
		elseif input.KeyCode == Enum.KeyCode.A then
			print("Pressing A")	
			ML = "Left"
			lf:FireServer(ML)	
		elseif input.KeyCode == Enum.KeyCode.D then
			print("Pressing D")	
			MR = "Right"
			rf:FireServer(MR)	
		end
	end
end)
US.InputEnded:Connect(function(input,gameProcessedEvent,typing)
	if not typing then
		if input.KeyCode == Enum.KeyCode.W then
			print("Stopped Pressing W")
			MF = ""
			fo:FireServer(MF)
		elseif input.KeyCode == Enum.KeyCode.S then
			print("Stopped Pressing S")
			MB = ""
			bk:FireServer(MB)	
		elseif input.KeyCode == Enum.KeyCode.A then
			print("Stopped Pressing A")	
			ML = ""
			lf:FireServer(ML)	
		elseif input.KeyCode == Enum.KeyCode.D then
			print("Stopped Pressing D")	
			MR = ""
			rf:FireServer(MR)	
		end
	end
end)

print(aa)
local HD = FCH["Head"]
local TS = FCH["Torso"]
local LA = FCH["Left Arm"]
local RA = FCH["Right Arm"]
local RG = FCH["Right Leg"]
local LG = FCH["Left Leg"]
local ROT = FCH["HumanoidRootPart"]
print(Ani) print(CH)
local Cam = workspace.CurrentCamera
Cam.Focus = HD.CFrame
Cam.CameraSubject = HD
Cam.CameraType = "Track"
local RootHipWeld = Instance.new("Weld")
	RootHipWeld.Parent = FCH.HumanoidRootPart
	RootHipWeld.Part0 = FCH.HumanoidRootPart
	RootHipWeld.Part1 = FCH.Torso
	RootHipWeld.C0 = FCH.HumanoidRootPart.RootJoint.C0
	RootHipWeld.C1 = FCH.HumanoidRootPart.RootJoint.C1

	local RightArmWeld = Instance.new("Weld")
	RightArmWeld.Parent = FCH.Torso
	RightArmWeld.Part0 = FCH.Torso
	RightArmWeld.Part1 = FCH["Right Arm"]
	RightArmWeld.C0 = FCH.Torso["Right Shoulder"].C0
	RightArmWeld.C1 = FCH.Torso["Right Shoulder"].C1

	local LeftArmWeld = Instance.new("Weld")
	LeftArmWeld.Parent = FCH.Torso
	LeftArmWeld.Part0 = FCH.Torso
	LeftArmWeld.Part1 = FCH["Left Arm"]
	LeftArmWeld.C0 = FCH.Torso["Left Shoulder"].C0
	LeftArmWeld.C1 = FCH.Torso["Left Shoulder"].C1

	local RightLegWeld = Instance.new("Weld")
	RightLegWeld.Parent = TS
	RightLegWeld.Part0 = TS
	RightLegWeld.Part1 = FCH["Right Leg"]
	RightLegWeld.C0 = FCH.Torso["Right Hip"].C0
	RightLegWeld.C1 = FCH.Torso["Right Hip"].C1

	local LeftLegWeld = Instance.new("Weld")
	LeftLegWeld.Parent = TS
	LeftLegWeld.Part0 = TS
	LeftLegWeld.Part1 = FCH["Left Leg"]
	LeftLegWeld.C0 = FCH.Torso["Left Hip"].C0
	LeftLegWeld.C1 = FCH.Torso["Left Hip"].C1

	local Neck = Instance.new("Weld")
	Neck.Parent = FCH.Torso
	Neck.Part0 = FCH.Torso
	Neck.Part1 = FCH.Head
	Neck.C0 = FCH.Torso.Neck.C0
	Neck.C1 = FCH.Torso.Neck.C1
	TB = {
			["Head"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(math.cos(10*tick())));
			["Torso"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(math.cos(10*tick()))); --x,z,y
			["Left Leg"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*-math.cos(10.7*tick())));
			["Right Leg"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*-math.cos(10.7*tick())));
			["Left Arm"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*math.cos(10.7*tick())));
			["Right Arm"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*math.cos(10.7*tick())));

		}

	function lerp(t, f)
		pcall(function()
			for i = 0,1,f do
				if t["Torso"] ~= nil then
					RootHipWeld.C0 = RootHipWeld.C0:Lerp(CH.HumanoidRootPart.RootJoint.C0 * t["Torso"],i)
				end
				if t["Right Arm"] ~= nil then
					RightArmWeld.C0 = RightArmWeld.C0:Lerp(CH.Torso["Right Shoulder"].C0 * t["Right Arm"], i)
				end
				if t["Right Leg"] ~= nil then
					RightLegWeld.C0 = RightLegWeld.C0:Lerp(CH.Torso["Right Hip"].C0 * t["Right Leg"], i)
				end
				if t["Left Arm"] ~= nil then
					LeftArmWeld.C0 = LeftArmWeld.C0:Lerp(CH.Torso["Left Shoulder"].C0 * t["Left Arm"], i)
				end
				if t["Left Leg"] ~= nil then
					LeftLegWeld.C0 = LeftLegWeld.C0:Lerp(CH.Torso["Left Hip"].C0 * t["Left Leg"], i)
				end
				if t["Head"] ~= nil then
					Neck.C0 = Neck.C0:Lerp(CH.Torso.Neck.C0 * t["Head"], i)
				end
				task.wait()
			end
		end)
	end
	
	local TB = {
		
	}
	local Attacking = false
	while true do
	aa:FireServer(Ani)
		if Ani == "Idle" and Attacking == false then
			TB = {
				["Torso"] = CFrame.new(0,0,-.2)*CFrame.new(0,0,math.sin(5*tick())/29); --x,z,y
				["Left Leg"] = CFrame.new(0,0,0)*CFrame.new(0,-math.sin(5*tick())/29,0);
				["Right Leg"] = CFrame.new(0,0,0)*CFrame.new(0,-math.sin(5*tick())/29,0);
				["Left Arm"] = CFrame.new(0,0,0)*CFrame.new(0,-math.sin(6*tick())/29,0);
				["Right Arm"] = CFrame.new(0,0,0)*CFrame.new(0,-math.sin(6*tick())/29,0);
			}
			lerp(TB,0.05)
		elseif Ani == "Walk" and Attacking == false then
			TB = {
				["Head"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(math.cos(10*tick())));
				["Torso"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(math.cos(10*tick()))); --x,z,y
				["Left Leg"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*-math.cos(10.7*tick())));
				["Right Leg"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*-math.cos(10.7*tick())));
				["Left Arm"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*math.cos(10.7*tick())));
				["Right Arm"] = CFrame.new(0,0,0)*CFrame.Angles(0,0,math.rad(42*math.cos(10.7*tick())));

			}

			lerp(TB,0.05)
		end
	wait()
    end
	]==],LPLR.PlayerGui)
end))
--TS.Material = "SmoothPlastic"
coroutine.resume(coroutine.create(function()
	while true do
		local mp = math.random(1,20)
		
		if mp == math.random(1,20) then
			local t = {
				["Head"] = CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(-50,50)),math.rad(math.random(-50,50)),math.rad(math.random(-50,50)));
				["Torso"] = CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(-50,50)),math.rad(math.random(-50,50)),math.rad(math.random(-50,50))); --x,z,y
				["Left Leg"] = CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(-50,50)),math.rad(math.random(-50,50)),math.rad(math.random(-50,50)));
				["Right Leg"] = CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(-50,50)),math.rad(math.random(-50,50)),math.rad(math.random(-50,50)));
				["Left Arm"] = CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(-50,50)),math.rad(math.random(-50,50)),math.rad(math.random(-50,50)));
				["Right Arm"] = CFrame.new(0,0,0)*CFrame.Angles(math.rad(math.random(-50,50)),math.rad(math.random(-50,50)),math.rad(math.random(-50,50)));
			}
			
			if t["Torso"] ~= nil then
				RootHipWeld.C0 = RootHipWeld.C0:Lerp(CH.HumanoidRootPart.RootJoint.C0 * t["Torso"],.2)
			end
			if t["Right Arm"] ~= nil then
				RightArmWeld.C0 = RightArmWeld.C0:Lerp(CH.Torso["Right Shoulder"].C0 * t["Right Arm"],.2)
			end
			if t["Right Leg"] ~= nil then
				RightLegWeld.C0 = RightLegWeld.C0:Lerp(CH.Torso["Right Hip"].C0 * t["Right Leg"],.2)
			end
			if t["Left Arm"] ~= nil then
				LeftArmWeld.C0 = LeftArmWeld.C0:Lerp(CH.Torso["Left Shoulder"].C0 * t["Left Arm"],.2)
			end
			if t["Left Leg"] ~= nil then
				LeftLegWeld.C0 = LeftLegWeld.C0:Lerp(CH.Torso["Left Hip"].C0 * t["Left Leg"],.2)
			end
			if t["Head"] ~= nil then
				Neck.C0 = Neck.C0:Lerp(CH.Torso.Neck.C0 * t["Head"],.2)
			end
		end
		wait()
	end
end))
--Ani = "Walk"
--coroutine.resume(coroutine.create(function()
--	game:GetService("RunService").Heartbeat:Connect(function()
		
--	end)
--end))
